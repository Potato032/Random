--[[
 _____   _                    _           _       _             
 |_   _| | |__     ___        | |   __ _  | |__   (_)  ___   ___ 
   | |   | '_ \   / _ \    _  | |  / _` | | '_ \  | | / __| / __|
   | |   | | | | |  __/   | |_| | | (_| | | |_) | | | \__ \ \__ \
   |_|   |_| |_|  \___|    \___/   \__,_| |_.__/  |_| |___/ |___/
                                                                 
]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (2==v18) then function v23()local v31,v32=v1(v16,v19,v19 + 2 + 0 );v19=v19 + (1080 -(608 + 470)) ;return (v32 * (1024 -(286 + 482))) + v31 ;end v24=nil;function v24()local v33=0;local v34;local v35;local v36;local v37;while true do if (v33==(1346 -(41 + 345 + 959))) then return (v37 * (16778800 -(776 + 808))) + (v36 * (33296 + 32240)) + (v35 * 256) + v34 ;end if (v33==((686 -(444 + 242)) + 0)) then v34,v35,v36,v37=v1(v16,v19,v19 + (135 -(69 + 63)) );v19=v19 + (8 -4) ;v33=1516 -(863 + 652) ;end end end v25=nil;v18=3;end if (v18==5) then v30=nil;function v30(v38,v39,v40)local v41=0;local v42;local v43;local v44;while true do if (v41==0) then v42=v38[1];v43=v38[2];v41=1;end if (v41==1) then v44=v38[3];return function(...)local v78=1;local v79= -1;local v80={...};local v81=v12("#",...) -1 ;local function v82()local v85=v42;local v86=v43;local v87=v44;local v88=v28;local v89={};local v90={};local v91={};for v95=0 + 0 ,v81 do if ((v95>=v87) or ((1492 -(372 + 18))>4818)) then v89[v95-v87 ]=v80[v95 + 1 + 0 ];else v91[v95]=v80[v95 + 1 + 0 ];end end local v92=(v81-v87) + 1 + 0 ;local v93;local v94;while true do local v96=0 -0 ;while true do if ((v96==(1 + 0)) or ((827 -(4 + 395))>(5335 -(2859 -(212 + 174))))) then if (((925 -189)<(6525 -2508)) and (v94<=(35 -20))) then if ((v94<=7) or ((679 -468)>2880)) then if ((v94<=(34 -(9 + 22))) or ((5203 -(300 + 208))<=((6697 -4323) + 1687))) then if ((2790<(3948 -(170 + 638))) and (v94<=(1961 -(1029 + 931)))) then if ((1510==((1159 -(399 + 642)) + 1392)) and (v94>(0 + 0))) then v91[v93[4 -2 ]]=v40[v93[557 -(381 + 173) ]];else do return;end end elseif ((v94>(7 -5)) or (528>=(3953 -(183 + 414)))) then v91[v93[2]]=v91[v93[3]] + v91[v93[3 + 1 ]] ;elseif ((v93[2]==v91[v93[4 + 0 ]]) or (4729<(4435 -(2362 -(22 + 20))))) then v78=v78 + (2 -1) + 0 ;else v78=v93[3 + 0 ];end elseif ((v94<=(10 -(197 -(56 + 136)))) or ((1056 -473)>=((6729 -(189 + 1651)) -(535 + 116)))) then if ((((262 + 83) -(73 + 232))<525) and (v94==4)) then v91[v93[7 -5 ]]={};else v91[v93[3 -1 ]][v93[8 -5 ]]=v93[1099 -(998 + 97) ];end elseif ((v94==(753 -(384 + 363))) or ((793 + 821)<(157 + 858 + 556))) then v91[v93[4 -2 ]][v93[24 -(9 + 12) ]]=v91[v93[4]];else local v134=0 -0 ;local v135;local v136;while true do if (((2094 -(374 + 1535))<=2083) and (v134==1)) then while true do if (((767 + 124)<(999 + 1863)) and (v135==(760 -(269 + 491)))) then v136=v93[2];v91[v136]=v91[v136](v13(v91,v136 + 1 + 0 ,v93[3 + 0 ]));break;end end break;end if (((5768 -(806 + 1148))>(1643 -929)) and ((763 -(227 + 536))==v134)) then v135=0;v136=nil;v134=(1 -0) + 0 ;end end end elseif ((3380>=(718 -(69 + 153))) and (v94<=(3 + 8))) then if ((v94<=(6 + (5 -2))) or ((6040 -(15427 -12022))<=(3305 -((1375 -(232 + 890)) + 746)))) then if ((v94==(5 + 3)) or (2562>(1777 + (10094 -8009)))) then v91[v93[3 -1 ]]=v91[v93[1 + 2 ]];else local v139=0 + 0 ;local v140;local v141;local v142;local v143;while true do if (((4 -2)==v139) or ((5029 -(1459 + 56))<(1189 -((1081 -631) + 168 + 148)))) then for v228=v140,v79 do local v229=0 -0 ;local v230;while true do if ((v229==(1826 -(78 + 1748))) or (976==624)) then v230=(933 -(492 + 441)) + 0 ;while true do if (((0 + 0)==v230) or (1794>=4502)) then v143=v143 + (4 -(3 + 0)) ;v91[v228]=v141[v143];break;end end break;end end end break;end if (((3581 -(137 + 973))<(4357 -(917 + 141))) and (v139==(1 + 0))) then v79=(v142 + v140) -1 ;v143=(632 -(44 + 588)) + 0 ;v139=769 -(443 + 324) ;end if (((2813 + 1225)>=(110 + 3755)) and (v139==(1563 -(299 + 1264)))) then v140=v93[2];v141,v142=v88(v91[v140](v13(v91,v140 + 1 ,v93[(666 -(281 + 379)) -3 ])));v139=1 + 0 ;end end end elseif (((99 + 31 + 146)<=4647) and (v94==(26 -16))) then local v144=1590 -(838 + 752) ;local v145;local v146;local v147;while true do if (((3685 -(1252 + 84))==(356 + 1993)) and ((0 + (455 -(409 + 46)))==v144)) then v145=(0 -0) + 0 ;v146=nil;v144=4 -3 ;end if (((840 + 85)<3507) and (v144==1)) then v147=nil;while true do if (((892 + 273)>=(987 -(79 + 833))) and (v145==(1028 -(539 + 489)))) then local v236=0;while true do if (((769 -(64 + 512))<(6608 -(2096 + 461))) and (1==v236)) then v145=1 -0 ;break;end if ((744<(6433 -4664)) and (v236==(0 + 0))) then v146=v93[119 -(104 + 13) ];v147=v91[v146];v236=3 -2 ;end end end if ((v145==(3 -2)) or ((966 + 368)>=((7486 -2550) -(153 + 21)))) then for v257=v146 + (2 -1) ,v79 do v7(v147,v91[v257]);end break;end end break;end end else for v205=v93[5 -3 ],v93[192 -(70 + 119) ] do v91[v205]=nil;end end elseif ((v94<=(9 + 4)) or (4692<=(2486 -1618))) then if ((v94==(31 -(75 -56))) or (2013>=((6656 -(125 + 235)) -(1134 + 805)))) then local v148=0;local v149;local v150;local v151;local v152;while true do if ((232<=(1449 + 604)) and (v148==(131 -(17 + 113)))) then v151=nil;v152=nil;v148=3 -1 ;end if ((3308>=(4173 -(975 + 463))) and (v148==2)) then while true do if ((v149==(2 -1)) or ((2365 + 1111)<=(643 + 1151))) then v152=v93[3];for v258=2 -1 ,v152 do v151[v258]=v91[v150 + v258 ];end break;end if ((4400==(439 + 3961)) and (v149==0)) then local v238=0 -0 ;while true do if (((2761 -(736 + (587 -(14 + 41))))>1482) and ((0 -0)==v238)) then v150=v93[7 -(17 -12) ];v151=v91[v150];v238=1 -0 ;end if (((4698 -(751 + (1530 -973)))<(4471 -(865 + 101))) and (v238==1)) then v149=1 + 0 ;break;end end end end break;end if ((v148==((0 -0) + 0)) or ((2730 + 202)>=((5344 -(1021 + 193)) -(116 + 428)))) then v149=0 + 0 ;v150=nil;v148=138 -(20 + 117) ;end end else local v153=(2035 -(398 + 1007)) -(403 + 227) ;local v154;while true do if ((((1870 -(46 + 938)) -(404 + 482))==v153) or (((182 -(46 + 109)) + 491)==((6810 + 2891) -5689))) then v154=v93[1876 -(703 + 1171) ];v91[v154]=v91[v154]();break;end end end elseif ((v94>(1817 -(1204 + 599))) or ((3721 -1192)>(1314 + (4592 -(1563 + 362))))) then local v155=790 -(214 + 576) ;local v156;local v157;local v158;while true do if (((1 + 0)==v155) or ((1758 -(4 + 16))==1911)) then v158=nil;while true do if (((990 + 390)>=(628 -305)) and (v156==(0 + 0))) then local v239=0;while true do if (((1913 -(220 + 228))<=(2480 + 2024)) and (v239==(0 + 0))) then v157=817 -(432 + 385) ;v158=nil;v239=1 + 0 ;end if ((40<(7171 -4320)) and ((1407 -((1930 -(513 + 355)) + 344))==v239)) then v156=(1572 -(700 + 871)) + 0 ;break;end end end if ((626==626) and (v156==(1465 -(115 + 1349)))) then while true do if ((334==(1588 -((1658 -(30 + 1077)) + 703))) and (v157==0)) then v158=v93[2];v91[v158](v13(v91,v158 + 1 + 0 ,v93[3]));break;end end break;end end break;end if ((967>=(680 + 78)) and (v155==(1478 -((729 -357) + 1106)))) then v156=767 -(574 + 193) ;v157=nil;v155=905 -(846 + 58) ;end end else local v159=(1852 -(362 + 104)) -(408 + 978) ;local v160;local v161;local v162;while true do if (((1 -0)==v159) or ((1308 + (1770 -801))>=((11498 -8371) + 714))) then v162=nil;while true do if ((v160==(2 -1)) or ((5628 -(13 + 672))<=(6252 -2378))) then v91[v161 + 1 + 0 ]=v162;v91[v161]=v162[v93[961 -(520 + 437) ]];break;end if (((15417 -11630)>=(29 + 238)) and (v160==(0 + 0))) then v161=v93[2 + 0 ];v162=v91[v93[1269 -(799 + (1974 -(1011 + 496))) ]];v160=1 -0 ;end end break;end if ((v159==(1927 -(1084 + 843))) or ((1261 -(919 + 264))>=(4044 -(555 + 415)))) then v160=0;v161=nil;v159=1;end end end elseif ((v94<=23) or ((6362 -(840 + 942))<((3608 + 4425) -3949))) then if (((944 + 1360)>=(4673 -2899)) and (v94<=19)) then if ((v94<=(690 -(185 + 488))) or ((5015 -(207 + 741))>=(13011 -8432))) then if ((v94==(819 -((1286 -(109 + 616)) + 242))) or ((3876 -(683 + (2155 -(900 + 423))))<=(404 + 151))) then local v163=0;local v164;local v165;while true do if (((726 + 419)==((2145 + 665) -1665)) and (v163==1)) then while true do if (((0 -0)==v164) or (198>=(3352 + 298))) then v165=v93[3 -1 ];v91[v165](v91[v165 + 1 + 0 ]);break;end end break;end if ((v163==(0 -0)) or ((1504 + (1670 -(196 + 125)))<(4337 -1575))) then v164=0 + 0 ;v165=nil;v163=(220 -(47 + 172)) + 0 ;end end else local v166=0 -0 ;local v167;local v168;local v169;while true do if ((((21045 -5748) -11154)>=((2784 -(786 + 266)) -475)) and ((481 -(417 + (800 -(506 + 230))))==v166)) then local v218=0 + 0 ;while true do if (((0 + 0)==v218) or ((12128 -7983)==(987 + 1079))) then v167=v93[2];v168=v91[v167 + 1 + 1 ];v218=1 + 0 ;end if ((v218==((952 -(736 + 215)) + 0)) or ((4690 + 83)==(3206 -(205 + 1191)))) then v166=1074 -((1557 -(206 + 665)) + 387) ;break;end end end if ((v166==(452 -(406 + 44))) or ((98 + 445)>=((7521 -(378 + 1237)) -(719 + (1768 -1140))))) then if ((v168>(0 -0)) or ((1572 + 1791)>(5421 -(258 + 362 + 668)))) then if ((v169<=v91[v167 + (2 -1) ]) or ((385 + 622)>(4903 -(434 + 299)))) then local v261=0 -0 ;local v262;while true do if ((v261==(0 -0)) or (((3130 -(20 + 132)) -(4316 -2432))>(4325 + 4))) then v262=1104 -(264 + 840) ;while true do if (((4207 -(8830 -6228))>=(1176 + 55)) and (v262==(0 + 0))) then v78=v93[6 -3 ];v91[v167 + 3 ]=v169;break;end end break;end end end elseif ((v169>=v91[v167 + 1 + 0 ]) or (4293==((3149 -(513 + 752)) -1086))) then local v263=0 + 0 ;local v264;while true do if (((603 + (4183 -(1500 + 434)))>1699) and (v263==(0 -0))) then v264=0 -(0 -0) ;while true do if ((2102<=(2929 + 259)) and ((0 -0)==v264)) then v78=v93[8 -5 ];v91[v167 + ((1837 -(1046 + 777)) -11) ]=v169;break;end end break;end end end break;end if ((v166==(3 -2)) or ((4190 -2767)==(574 + 2225))) then v169=v91[v167] + v168 ;v91[v167]=v169;v166=2;end end end elseif (((3324 -(882 + 67))>(2806 -1817)) and (v94==(826 -(704 + 104)))) then v91[v93[1 + 1 ]]=v93[280 -(60 + 217) ]~=(935 -(683 + 252)) ;else v91[v93[2]]=v91[v93[3]] -v93[1733 -(218 + 1511) ] ;end elseif (((1991 -666)<=((16328 -9059) -(4802 -(79 + 72)))) and (v94<=21)) then if ((v94>(32 -12)) or (3302<=(639 + 1139))) then v91[v93[937 -(746 + 189) ]]=v39[v93[7 -4 ]];else v91[v93[1760 -(1639 + 119) ]]=v91[v93[6 -3 ]][v93[4]];end elseif (((1255 -343)>(37 + 105)) and (v94==22)) then local v176=0 + 0 ;local v177;local v178;local v179;while true do if ((((42420 -28684) -8859)==((16814 + 1727) -13664)) and (v176==1)) then v179=nil;while true do if (((1714 -786)<=((8239 -5419) -(331 + 224))) and (v177==(1 + 0))) then for v265=1339 -(70 + 1268) , #v90 do local v266=(1529 -(343 + 1186)) -0 ;local v267;local v268;local v269;while true do if ((3086==3086) and ((1020 -(585 + 434))==v266)) then v269=nil;while true do if ((v267==1) or (((1076 + 5495) -4544)<(2399 -(732 + 55)))) then while true do if ((v268==(0 + 0)) or ((11495 -6518)<=(5745 -3588))) then v269=v90[v265];for v326=1134 -(560 + 574) , #v269 do local v327=0 -0 ;local v328;local v329;local v330;local v331;local v332;while true do if ((0==v327) or ((2046 -(806 + 526))>=(2620 -(57 + 164)))) then v328=0 -0 ;v329=nil;v327=1 + 0 ;end if (((2356 + 1186)>(413 + 1355)) and (v327==(1 + 0))) then v330=nil;v331=nil;v327=1775 -(1742 + 9 + 22) ;end if (((58 + 1060)<=(2333 + 510)) and (v327==(2 + 0))) then v332=nil;while true do if (((7968 -4260)>((105 + 2951) -1247)) and (v328==2)) then while true do if (((2726 + 2156)>=(2504 -(47 + 1046))) and (v329==(1 + 0))) then v332=v330[2];if (((v331==v91) and (v332>=v178)) or ((10748 -7382)==(4880 -(789 + 80)))) then local v350=0 -(1865 -(1122 + 743)) ;local v351;while true do if ((v350==(790 -(247 + 543))) or ((543 -(1383 -(1106 + 100)))>(2572 + 1052))) then v351=1114 -(882 + 232) ;while true do if ((v351==0) or ((168 -(329 -241))==(1218 + 621))) then v179[v332]=v331[v332];v330[1392 -(731 + 660) ]=v179;break;end end break;end end end break;end if ((v329==0) or (2877<=(1129 + 716))) then local v349=0 -0 ;while true do if (((902 -600)<4727) and (v349==0)) then local v352=1172 -(872 + 300) ;while true do if ((v352==(822 -(334 + 487))) or (((1722 -1287) + 215 + 68)>(10916 -7276))) then v349=3 -2 ;break;end if (((4528 -2965)>=254) and (v352==(478 -(461 + 17)))) then v330=v269[v326];v331=v330[1633 -(1456 + 176) ];v352=1 + 0 ;end end end if (((2409 + 392)==2801) and (v349==(1 + 0))) then v329=1;break;end end end end break;end if (((463 + 3327)>((4076 -(241 + 1154)) -(10 + (840 -591)))) and (v328==(0 + 0))) then local v344=0 + 0 ;while true do if (((2475 + (897 -346))>(2903 -(641 + (2113 -(1563 + 72))))) and (v344==(402 -(11 + 391)))) then v329=1881 -(1336 + 545) ;v330=nil;v344=(1457 -(1384 + 72)) -0 ;end if (((2162 -576)==(1258 + 328)) and (v344==(2 -1))) then v328=1 + (1522 -(216 + 1306)) ;break;end end end if (((173 -(9 + 0 + 163))==v328) or ((2552 -(282 + 1463))>=(654 + 61 + 2564))) then local v345=373 -(293 + 80) ;while true do if ((v345==(0 + 0)) or (1750==((14448 -(222 + 259)) -11162))) then v331=nil;v332=nil;v345=1 -0 ;end if (((267 + (1159 -(456 + 143)))<=(2561 + 1336)) and (v345==(1 -0))) then v328=2 + 0 + 0 ;break;end end end end break;end end end break;end end break;end if ((v267==(0 -(0 + 0))) or ((879 -347)==(1817 -(139 + 721)))) then local v313=(1503 -(847 + 656)) -0 ;while true do if ((v313==(1 + 0)) or ((1333 -(815 + 500))>(6718 -(1292 + 477)))) then v267=1 -0 ;break;end if (((0 -0)==v313) or ((15167 -11203)<=(1326 -(513 + 760)))) then v268=1812 -(26 + 1786) ;v269=nil;v313=1 + 0 ;end end end end break;end if (((609 + 561)>=(1607 -(544 + 306 + 55))) and (v266==(0 + 0))) then v267=0 + 0 ;v268=nil;v266=3 -2 ;end end end break;end if (((5448 -2897)>(302 + 461)) and (v177==(0 + 0))) then local v248=(0 -0) -0 ;while true do if (((5594 -(642 + 94))==4858) and (v248==(1 + 0 + 0))) then v177=1 + 0 ;break;end if (((777 -(518 + 153))<=4309) and (v248==(0 -0))) then v178=v93[6 -4 ];v179={};v248=486 -(343 + 142) ;end end end end break;end if ((v176==(0 + 0)) or ((1704 -(321 + 26))<=(3127 -2076))) then v177=0 -0 ;v178=nil;v176=3 -2 ;end end else v91[v93[4 -2 ]]=v30(v86[v93[3]],nil,v40);end elseif ((v94<=27) or ((3631 + 425)<(3088 -((1915 -1272) + 702)))) then if ((4228<4874) and (v94<=(1762 -(130 + 1607)))) then if (((6271 -(1074 + 415))>=2174) and (v94==(81 -57))) then local v181=0 + 0 ;local v182;local v183;while true do if ((v181==(0 + 0)) or ((5507 -(286 + 391))<(312 + 538))) then v182=(1403 -(689 + 11)) -(658 + (167 -122)) ;v183=nil;v181=1048 -(195 + (1273 -(40 + 381))) ;end if (((1877 -(27 + 29))<4110) and ((1 + 0)==v181)) then while true do if ((v182==(916 -(903 + 13))) or ((6157 -3037)==((4785 -(284 + 678)) -(267 + 1085)))) then v183=v93[18 -((23 -18) + 11) ];v91[v183]=v91[v183](v13(v91,v183 + 1 + 0 ,v79));break;end end break;end end else v78=v93[7 -(1924 -(517 + 1403)) ];end elseif (((1144 + 799)<((9567 -5063) -2062)) and (v94==(1544 -(772 + (1787 -(577 + 464)))))) then local v185=0 + 0 ;local v186;local v187;while true do if (((5047 -(609 + 384))>((2221 -(305 + 18)) -(290 + 1106))) and (v185==(288 -((2105 -(572 + 1362)) + (213 -96))))) then v186=v93[2];v187=v91[v186];v185=1 -0 ;end if ((1473>(1302 -(397 + 167))) and (((881 -(436 + 444)) + 0)==v185)) then for v231=v186 + 1 + 0 ,v93[1984 -(755 + 1226) ] do v7(v187,v91[v231]);end break;end end else local v188=0 + 0 ;local v189;local v190;local v191;local v192;while true do if ((2832<(5738 -(1098 + 694))) and (v188==(1 + 1))) then while true do if ((v189==(5 -3)) or ((281 + 2592)>=4048)) then for v270=1,v93[(886 -(336 + 545)) -1 ] do local v271=0 -0 ;local v272;local v273;while true do if ((v271==0) or ((13857 -9818)==(655 + 1209))) then v272=0 -0 ;v273=nil;v271=2 -1 ;end if ((396==(950 -(2208 -(1235 + 419)))) and ((1 -0)==v271)) then while true do if (((20679 -16443)>=2471) and (v272==(1 + 0))) then if ((v273[1]==(1 + (18 -11))) or ((5091 -3379)>(3295 + 1098))) then v192[v270-1 ]={v91,v273[3]};else v192[v270-1 ]={v39,v273[1314 -(523 + 788) ]};end v90[ #v90 + (1767 -(65 + 1701)) ]=v192;break;end if ((((2024 + 1926) -2006)<((7036 -3045) -(121 + 1481))) and ((0 + 0)==v272)) then v78=v78 + 1 ;v273=v85[v78];v272=2 -1 ;end end break;end end end v91[v93[2 + 0 ]]=v30(v190,v191,v40);break;end if ((((1274 + 419) -(1103 + 187))<=4369) and (v189==(1372 -(944 + 427)))) then v192={};v191=v10({},{__index=function(v274,v275)local v276=(1054 -(599 + 455)) + 0 ;local v277;local v278;local v279;while true do if (((2421 -1640)<(5677 -(811 + 6))) and (v276==(1221 -(1025 + 196)))) then v277=0 -0 ;v278=nil;v276=1;end if ((v276==(1 + 0)) or ((12535 -9017)==1387)) then v279=nil;while true do if ((2969==(595 + 2374)) and (v277==(0 + 0))) then v278=0;v279=nil;v277=(1956 -849) -(442 + 664) ;end if (((545 -(247 + 297))==v277) or ((1485 + 919)==(817 + 317))) then while true do if ((v278==(0 + 0)) or (((1902 + 3055) -(416 + 17))==(12104 -(6783 + 1341)))) then local v322=0 -(423 -(401 + 22)) ;while true do if (((1515 -(1961 -1064))==(366 + 252)) and (v322==(0 + 0))) then local v334=(899 -(515 + 384)) -0 ;while true do if (((2057 -407)<=(1950 + (2854 -(58 + 32)))) and (v334==(0 + 0))) then v279=v192[v275];return v279[991 -(945 + 45) ][v279[1 + 1 ]];end end end end end end break;end end break;end end end,__newindex=function(v280,v281,v282)local v283=0 + 0 ;local v284;while true do if (((7875 -3860)>=(251 + (2512 -(771 + 588)))) and (v283==(0 -0))) then v284=v192[v281];v284[257 -(94 + 162) ][v284[(2339 -1533) -(690 + 114) ]]=v282;break;end end end});v189=2 + 0 ;end if (((0 -0)==v189) or ((1211 + 691 + 2933)<=(2364 -(11 + 47)))) then v190=v86[v93[3]];v191=nil;v189=1 + 0 ;end end break;end if (((3782 -(2395 -(408 + 509)))<((3930 + 639) -(1882 + 24))) and (v188==(0 + 0))) then v189=0 + 0 ;v190=nil;v188=1 + 0 ;end if (((712 + (4423 -2036))<(5035 -(261 + 1094))) and (v188==1)) then v191=nil;v192=nil;v188=716 -(265 + 449) ;end end end elseif ((v94<=29) or ((6289 -(159 + 1136))<4838)) then if (((6400 -(1186 + (1954 -(1342 + 358))))==4960) and (v94==(1302 -(1232 + 42)))) then v91[v93[2]]=v93[3];else local v195=0;local v196;local v197;while true do if ((v195==0) or (708>=2613)) then v196=0;v197=nil;v195=1 -0 ;end if ((((1 -0) + 0)==v195) or ((32 + 506)>(1376 -799))) then while true do if (((3221 -(50 + 25))>=2394) and (v196==(0 -0))) then v197=v93[2];v91[v197]=v91[v197](v91[v197 + (2 -1) + 0 ]);break;end end break;end end end elseif ((v94>(21 + 9)) or ((12700 -9131)>((5858 -(393 + 50)) -(1033 + 102)))) then local v198=0 -(1546 -(1283 + 263)) ;local v199;local v200;local v201;while true do if ((3500==(7512 -4012)) and (v198==(293 -(34 + 258)))) then v201=v91[v199 + ((336 -(35 + 295)) -4) ];if ((3042<((958 -(816 + 31)) + 3195)) and (v201>(0 + 0))) then if ((v200>v91[v199 + (1650 -(964 + 685)) ]) or (4604<=3230)) then v78=v93[8 -5 ];else v91[v199 + 3 + (0 -0) ]=v200;end elseif ((((611 + 1102) -(18 + 139))<=2146) and (v200<v91[v199 + (1 -0) ])) then v78=v93[6 -3 ];else v91[v199 + 2 + 1 ]=v200;end break;end if (((3158 -(24 + 11))>(2991 -(227 + 371))) and (v198==(0 + 0))) then local v223=0;while true do if ((v223==((0 + 0) -(658 -(530 + 128)))) or ((1841 + 2107)>((5065 -(117 + 788)) + 218))) then v199=v93[2];v200=v91[v199];v223=1;end if (((4882 -836)>=(30 + 92)) and (v223==(1 + 0))) then v198=1 + 0 ;break;end end end end elseif (((3708 + 30)>(2258 -(106 + 121))) and (v91[v93[2 + 0 ]]==v93[11 -7 ])) then v78=v78 + 1 ;else v78=v93[3];end v78=v78 + 1 + 0 ;break;end if ((v96==(1824 -(1185 + 354 + 285))) or ((524 -295)>=(5044 -(1806 + 92)))) then local v105=0 -0 ;while true do if ((v105==(1885 -(240 + 1644))) or (3216==(1390 -1011))) then v96=1 -0 ;break;end if (((3777 -(385 + 1538))==(4187 -2333)) and (0==v105)) then v93=v85[v78];v94=v93[1852 -(592 + (2743 -1484)) ];v105=1072 -(198 + 873) ;end end end end end end A,B=v28(v11(v82));if  not A[1] then local v97=0;local v98;while true do if (v97==0) then v98=v38[4][v78] or "?" ;error("Script error at ["   .. v98   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end end;end end end return v30(v29(),{},v17)(...);end if (v18==4) then v28=nil;function v28(...)return {...},v12("#",...);end v29=nil;function v29()local v45=0 -0 ;local v46;local v47;local v48;local v49;local v50;local v51;while true do local v68=0 -0 ;while true do if ((1 + 0)==v68) then if (v45==(0 -0)) then local v99=0 -0 ;while true do if (v99==(326 -(24 + 302))) then v46={};v47={};v99=1 + 0 ;end if (v99==1) then v48={};v45=1 + 0 ;break;end end end if (v45==(1491 -(714 + 776))) then local v100=0 + 0 ;while true do if (v100~=(1 -0)) then else v51={};v45=1604 -(1575 + 27) ;break;end if (0==v100) then local v106=0;while true do if (v106==(1 -0)) then v100=1;break;end if (v106~=(1207 -(844 + 363))) then else v49={v46,v47,nil,v48};v50=v24();v106=951 -(247 + 703) ;end end end end end break;end if (v68==(0 + 0)) then local v83=0 -0 ;while true do if (0~=v83) then else if (v45==(3 -0)) then local v107=0;local v108;while true do if (v107==(0 -0)) then v108=0 -0 ;while true do local v123=0 -0 ;while true do if (v123==(0 -0)) then if (v108==(1 -0)) then return v49;end if (v108~=0) then else local v125=0;while true do if (v125==(0 + 0)) then for v224=1 + 0 ,v24() do v47[v224-(908 -(319 + 588)) ]=v29();end for v226=1 -0 ,v24() do v48[v226]=v24();end v125=2 -1 ;end if (v125==(484 -(279 + 204))) then v108=1 + 0 ;break;end end end break;end end end break;end end end if (v45==(7 -5)) then for v110=1084 -(1023 + 60) ,v50 do local v111=0 + 0 ;local v112;local v113;local v114;local v115;while true do if (v111~=(0 -0)) then else v112=0 + 0 ;v113=nil;v111=1871 -(1773 + 97) ;end if (1~=v111) then else v114=nil;v115=nil;v111=2 + 0 ;end if (v111~=2) then else while true do if (v112~=(0 + 0)) then else v113=0 + 0 ;v114=nil;v112=1;end if ((1170 -(1092 + 77))==v112) then v115=nil;while true do if (v113==(841 -(735 + 105))) then if (v114==(1450 -(751 + 698))) then v115=v22()~=0 ;elseif (v114==(1779 -(1040 + 737))) then v115=v25();elseif (v114==(1640 -(1144 + 493))) then v115=v26();end v51[v110]=v115;break;end if (v113==(0 -0)) then local v203=0 + 0 ;local v204;while true do if (v203==0) then v204=0 + 0 ;while true do if (v204==0) then v114=v22();v115=nil;v204=1 + 0 ;end if (v204~=1) then else v113=1;break;end end break;end end end end break;end end break;end end end v49[10 -7 ]=v22();for v116=1 + 0 ,v24() do local v117=0 -0 ;local v118;local v119;local v120;while true do if (v117==0) then v118=0;v119=nil;v117=1 -0 ;end if (v117==1) then v120=nil;while true do if (v118~=(882 -(672 + 209))) then else while true do if (v119==(0 -0)) then v120=v22();if (v21(v120,1 -0 ,1 + 0 )~=(0 -0)) then else local v209=0;local v210;local v211;local v212;local v213;local v214;while true do if ((0 + 0)==v209) then local v232=0;while true do if (v232~=(0 -0)) then else v210=0 + 0 ;v211=nil;v232=1 + 0 ;end if (v232==(1 + 0)) then v209=225 -(39 + 185) ;break;end end end if (v209==(1 + 1)) then v214=nil;while true do if (v210~=2) then else while true do if ((1 + 0)==v211) then local v303=1558 -(429 + 1129) ;while true do if (v303==0) then v214={v23(),v23(),nil,nil};if (v212==(0 + 0)) then local v323=0 + 0 ;local v324;local v325;while true do if (v323~=(1 -0)) then else while true do if (v324==(0 -0)) then v325=369 -(8 + 361) ;while true do if (0==v325) then v214[3]=v23();v214[4 + 0 ]=v23();break;end end break;end end break;end if (v323~=0) then else v324=574 -(173 + 401) ;v325=nil;v323=1 + 0 ;end end elseif (v212==1) then v214[3 + 0 ]=v24();elseif (v212==(1797 -(936 + 859))) then v214[3]=v24() -((5 -3)^(3 + 13)) ;elseif (v212~=(4 -1)) then else local v341=0 + 0 ;local v342;local v343;while true do if (1~=v341) then else while true do if (v342==0) then v343=0 + 0 ;while true do if (v343==0) then v214[1937 -(1539 + 395) ]=v24() -((2 -0)^(1622 -(201 + 1405))) ;v214[6 -2 ]=v23();break;end end break;end end break;end if (v341==0) then v342=0 + 0 ;v343=nil;v341=318 -(113 + 204) ;end end end v303=1186 -(1125 + 60) ;end if (v303~=(1 -0)) then else v211=2;break;end end end if (v211==0) then local v304=797 -(205 + 592) ;local v305;while true do if (v304==(0 -0)) then v305=0;while true do if (v305~=(1 -0)) then else v211=1;break;end if (v305~=0) then else v212=v21(v120,5 -3 ,3 -0 );v213=v21(v120,6 -2 ,3 + 3 );v305=1;end end break;end end end if (v211==(5 -2)) then if (v21(v213,3,3)==1) then v214[4 + 0 ]=v51[v214[3 + 1 ]];end v46[v116]=v214;break;end if ((933 -(144 + 787))==v211) then local v307=0;local v308;while true do if (v307==0) then v308=0 + 0 ;while true do if (v308~=(0 + 0)) then else if (v21(v213,1,1 -0 )==(1 + 0)) then v214[2]=v51[v214[2 + 0 ]];end if (v21(v213,1 + 1 ,3 -1 )~=(2 -1)) then else v214[3 + 0 ]=v51[v214[285 -(149 + 133) ]];end v308=1;end if (v308==(196 -(53 + 142))) then v211=2 + 1 ;break;end end break;end end end end break;end if (v210==(1122 -(1002 + 120))) then local v289=0;local v290;while true do if (v289==(0 -0)) then v290=0;while true do if (v290==(0 + 0)) then local v318=0 + 0 ;while true do if (v318~=(1 -0)) then else v290=1;break;end if ((0 -0)==v318) then v211=0 -0 ;v212=nil;v318=1;end end end if (v290==(2 -1)) then v210=1;break;end end break;end end end if (v210==(1415 -(241 + 1173))) then local v291=0;local v292;while true do if (v291~=(1573 -(754 + 819))) then else v292=1501 -(1011 + 490) ;while true do if (v292==(0 -0)) then v213=nil;v214=nil;v292=1;end if (v292==(2 -1)) then v210=2;break;end end break;end end end end break;end if (v209==(139 -(83 + 55))) then local v233=0;while true do if (v233~=(0 -0)) then else v212=nil;v213=nil;v233=1;end if (v233==(2 -1)) then v209=494 -(243 + 249) ;break;end end end end end break;end end break;end if (v118~=0) then else local v124=0 + 0 ;while true do if (v124~=(1 + 0)) then else v118=1 -0 ;break;end if (v124~=(0 + 0)) then else v119=0;v120=nil;v124=1;end end end end break;end end end v45=3;end v83=1;end if (v83~=(832 -(373 + 458))) then else v68=1 + 0 ;break;end end end end end end v18=5;end if (3==v18) then function v25()local v52=0 -0 ;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v52==0) then v53=v24();v54=v24();v52=3 -2 ;end if (v52==(1 -0)) then v55=1;v56=(v21(v54,1478 -(238 + 172 + 1067) ,49 -29 ) * ((220 -(94 + 124))^((1597 -(1198 + 387)) + 20))) + v53 ;v52=494 -(114 + 378) ;end if (v52==(7 -5)) then v57=v21(v54,1543 -(881 + 641) ,20 + 11 );v58=((v21(v54,114 -82 )==(2 -1)) and  -(4 -3)) or (785 -(462 + 322)) ;v52=6 -(673 -(263 + 407)) ;end if (v52==(2 + (1 -0))) then if (v57==(0 -(0 + 0))) then if (v56==0) then return v58 * (294 -((900 -647) + 41)) ;else v57=1;v55=0;end elseif (v57==2047) then return ((v56==(0 + 0)) and (v58 * ((1 -0)/0))) or (v58 * NaN) ;end return v8(v58,v57-(3595 -2572) ) * (v55 + (v56/((2 -0)^(3 + 49)))) ;end end end v26=nil;function v26(v59)local v60;if  not v59 then local v71=0 + 0 ;while true do if (v71==(0 -(0 + 0))) then v59=v24();if (v59==(0 + 0)) then return "";end break;end end end v60=v3(v16,v19,(v19 + v59) -(1 -0) );v19=v19 + v59 ;local v61={};for v69=1585 -((4163 -2744) + 165) , #v60 do v61[v69]=v2(v1(v3(v60,v69,v69)));end return v6(v61);end v27=v24;v18=4;end if (v18==1) then function v21(v62,v63,v64)if v64 then local v72=(v62/(((2348 -(221 + 230)) -(1502 + 393))^(v63-(1 + 0))))%((5 -(1213 -(606 + 604)))^(((v64-(291 -(39 + 251))) -(v63-1)) + (1732 -(1337 + 394)))) ;return v72-(v72%(3 -2)) ;else local v73=(6 -4)^(v63-(1 + 0)) ;return (((v62%(v73 + v73))>=v73) and (1 -0)) or (0 -0) ;end end v22=nil;function v22()local v65=0;local v66;while true do if (v65==0) then v66=v1(v16,v19,v19);v19=v19 + 1 + 0 ;v65=1 -0 ;end if (v65==(1 -0)) then return v66;end end end v23=nil;v18=2;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v67)if (v1(v67,2)==79) then v20=v0(v3(v67,1,1));return "";else local v74=v2(v0(v67,16));if v20 then local v84=v5(v74,v20);v20=nil;return v84;else return v74;end end end);v21=nil;v18=1;end end end vv9(),...);end